<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/cache 
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
		
	<bean id="userDetailsService"
		class="com.order.erp.core.security.ErpUserDetailsService" />

	<security:http pattern="/plugin/wx/callback**" security="none" />	
	<security:http pattern="/captcha.jpg**" security="none" />
	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/js/**" security="none" />
	<security:http pattern="/images/**" security="none" />
	<security:http pattern="**favicon.ico" security="none" />

	<security:http auto-config='true' use-expressions='true'>
		<security:intercept-url pattern="/init" access="hasAnyRole('ANONYMOUS')" requires-channel="any" />
		<security:intercept-url pattern="/is" access="hasAnyRole('ANONYMOUS')" requires-channel="any" />

		<security:csrf disabled='false' />
		<security:remember-me data-source-ref="dataSource"/>

		<security:intercept-url pattern="/register*" access="hasAnyRole('ANONYMOUS')" requires-channel="any" />
		<security:intercept-url pattern="/login" access="hasAnyRole('ANONYMOUS')" requires-channel="any" />
		<security:intercept-url pattern="/logout" access="hasAnyRole('ROLE_USER')" requires-channel="any" />
		
		<security:form-login login-page='/login' default-target-url='/'	always-use-default-target='true' />
		<security:logout logout-url='/logout' logout-success-url='/' />
		<security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER')" requires-channel="any" />	
	</security:http>


	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder ref="passwordEncoder">
			    <!-- <security:salt-source user-property="username" /> -->
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>


	<!-- RememberMe -->
	<bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<constructor-arg name="authenticationManager" ref="authenticationManager" />
		<constructor-arg name="rememberMeServices" ref="rememberMeServices"/>
	</bean>
	<bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<constructor-arg name="key" value="OrderERP" />
		<constructor-arg name="userDetailsService" ref="userDetailsService" />
	</bean>
	<bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<constructor-arg name="key" value="OrderERP" />
	</bean>



	<!-- ACL -->
    <!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓授权(Authorization)配置↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->
    <bean id="supervisor" class="org.springframework.security.core.authority.SimpleGrantedAuthority">
        <constructor-arg name="role" value="ROLE_SYSTEM"/>
    </bean>
 
    <bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
        <constructor-arg name="cache">
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="overflowToDisk" value="true"/>
                <property name="maxElementsInMemory" value="1024"/>
            </bean>
        </constructor-arg>
        <constructor-arg name="permissionGrantingStrategy" ref="permissionGrantingStrategy"/>
        <constructor-arg name="aclAuthorizationStrategy" ref="aclAuthorizationStrategy"/>
    </bean>
    
    <bean id="permissionGrantingStrategy" class="org.springframework.security.acls.domain.DefaultPermissionGrantingStrategy">
        <constructor-arg name="auditLogger">
            <bean class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
        </constructor-arg>
    </bean>
 
     <bean id="aclAuthorizationStrategy" class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
        <constructor-arg name="auths">
            <list>
                <ref bean="supervisor"/>
                <ref bean="supervisor"/>
                <ref bean="supervisor"/>
            </list>
        </constructor-arg>
    </bean>
 
    <bean id="lookupStrategy" class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
        <constructor-arg name="dataSource" ref="dataSource"/>
        <constructor-arg name="aclCache" ref="aclCache"/>
        <constructor-arg name="aclAuthorizationStrategy" ref="aclAuthorizationStrategy"/>
        <constructor-arg name="grantingStrategy" ref="permissionGrantingStrategy"/>
    </bean>
 
    <bean id="aclService" class="org.springframework.security.acls.jdbc.JdbcMutableAclService">
        <constructor-arg name="dataSource" ref="dataSource"/>
        <constructor-arg name="lookupStrategy" ref="lookupStrategy"/>
        <constructor-arg name="aclCache" ref="aclCache"/>
        <property name="classIdentityQuery" value="select @@identity"/><!-- select @@identity用于获得刚刚插入的自增id select LAST_INSERT_ID() -->
        <property name="sidIdentityQuery" value="select @@identity"/>
    </bean>
 
    <!-- 通过表达式使用ACL -->
    <bean id="aclPermissionEvaluator" class="org.springframework.security.acls.AclPermissionEvaluator">
        <constructor-arg name="aclService" ref="aclService"/>
    </bean>
	


</beans>